defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-25-alpha

version: 2
jobs:
  prepare_dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks
      - persist_to_workspace:
          root: .
          paths:
            - ./*
 
  run_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - run:
          name: Run Unit Tests
          command: ./gradlew test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
  build_app:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/
      - persist_to_workspace:
          root: .
          paths:
            - ./*
  deploy_release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - deploy:
          name: Deploy APK.
          command: |
            if [ "${CIRCLE_BRANCH}" == "add-workspaces-for-workflows" ]; then
             ./gradlew crashlyticsUploadDistributionRelease
             bash ./scripts/hock_deploy.sh
            fi
workflows:
  version: 2
  build:
    jobs:
      - prepare_dependencies      
      - run_tests:
          requires:
            - prepare_dependencies
      - build_app:
          requires:
            - prepare_dependencies
      - deploy_release:
          requires:
            - build_app
            - run_tests