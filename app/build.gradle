apply plugin: 'jacoco'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}


repositories {
    maven { url 'https://maven.fabric.io/public' }
}



def keystorePropertiesFile = file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.mortr.soloviev.mdc2018soloviev.mdc2018solo"
        minSdkVersion 17
//        targetSdkVersion 26
        versionCode 4
        versionName "3.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        manifestPlaceholders = [HOCKEYAPP_APP_ID: "2c37f0e52bfe49bdb6ae53c3e22a6fde"]
//        buildConfigField  "String","YAPPM_KEY",'7fbb2c47-e769-4a99-b643-58dbae8b2dd5'
        vectorDrawables.useSupportLibrary = true
//        buildConfigField  "String","YAPPM_KEY", "7fbb2c47-e769-4a99-b643-58dbae8b2dd5"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            ext.betaDistributionGroupAliases = 'MDC2018Soloviev'
        }
        debug {
            testCoverageEnabled true
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

afterEvaluate {
    testDebugUnitTest.jacoco.includeNoLocationClasses = true
    task runTestsWithCoverage(type: JacocoReport) {
        dependsOn(testDebugUnitTest, connectedDebugAndroidTest)
        executionData(fileTree(dir: buildDir, includes: ['**/*.exec', '**/*.ec']))
        setSourceDirectories(files(new File(projectDir, 'src/main/java')))
        setClassDirectories(fileTree(dir: new File(buildDir, 'intermediates/classes/debug'), exclude: [
                '**/R.class', '**/R$*.class', '**/BuildConfig.*', 'android/**/*.*'
        ]))
    }
}

jacoco {
    toolVersion = '0.8.0'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:preference-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:support-vector-drawable:26.1.0'

    compile 'com.yandex.android:mobmetricalib:2.80'

    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:percent:26.1.0'



    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    testImplementation 'org.robolectric:robolectric:3.7'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'


    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }
    compile 'net.hockeyapp.android:HockeySDK:5.1.0'
}
